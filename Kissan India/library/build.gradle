apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
//apply plugin: 'com.github.dcendents.android-maven'

group = 'github.vatsal.easyweather'
version = '1.0.0'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

bintray {
    user = 'code-crusher'
    key = '5ddba039b9c71692da10f261cc92394fe3f93d77'
    pkg {
        repo = 'maven'
        name = 'EasyWeather'

        version {
            name = 'library'
            desc = 'Easy weather and forecast fetching from OpenWeatherMap API for Android.'
            released = new Date()
            vcsTag = '1.0.0'
        }

        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/code-crusher/EasyWeather.git'
        websiteUrl = 'https://github.com/code-crusher/EasyWeather'
    }
    configurations = ['archives']
}